{"ast":null,"code":"export default function validateInfo(values) {\n  let errors = {};\n  console.log(\"validating!\");\n  var now = new Date();\n  var userDate = new Date(values.date);\n  userDate.setHours(values.time.slice(0, 2));\n  userDate.setMinutes(values.time.slice(3, 5));\n\n  if (values.origin === values.destination) {\n    errors.origin = \"Origin cannot be the same as destination\";\n  }\n\n  if (values.origin === \"None\" || !values.origin) {\n    errors.origin = \"Please Specify an Origin\";\n  }\n\n  if (values.destination === \"None\" || !values.destination) {\n    errors.destination = \"Please Specify a Destination\";\n  }\n\n  if (!values.date || !values.date) {\n    errors.date = \"Departure date required\";\n  } //   console.log(values.date);\n\n\n  if (userDate < now) {\n    errors.time = \"Date and/or time is in the Past\";\n    errors.date = \"Date and/or time is in the Past\";\n  }\n\n  if (!values.time) {\n    errors.time = \"Departure time required\";\n  }\n\n  if (values.preferred_car_type === \"None\" || !values.preferred_car_type) {\n    errors.preferred_car_type = \"Car Type cannot be left as None\";\n  }\n\n  if (values.preferred_group_size === \"None\" || !values.preferred_group_size) {\n    errors.preferred_group_size = \"Group Size cannot be left as None\";\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["/Users/shawtylow/Documents/Spring Semester 2021/SWE/ypool/web/src/components/pages/Request/validateInfo.js"],"names":["validateInfo","values","errors","console","log","now","Date","userDate","date","setHours","time","slice","setMinutes","origin","destination","preferred_car_type","preferred_group_size"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,MAAM,GAAG,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,QAAQ,GAAG,IAAID,IAAJ,CAASL,MAAM,CAACO,IAAhB,CAAf;AACAD,EAAAA,QAAQ,CAACE,QAAT,CAAkBR,MAAM,CAACS,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAlB;AACAJ,EAAAA,QAAQ,CAACK,UAAT,CAAoBX,MAAM,CAACS,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAApB;;AAEA,MAAIV,MAAM,CAACY,MAAP,KAAkBZ,MAAM,CAACa,WAA7B,EAA0C;AACxCZ,IAAAA,MAAM,CAACW,MAAP,GAAgB,0CAAhB;AACD;;AAED,MAAIZ,MAAM,CAACY,MAAP,KAAkB,MAAlB,IAA4B,CAACZ,MAAM,CAACY,MAAxC,EAAgD;AAC9CX,IAAAA,MAAM,CAACW,MAAP,GAAgB,0BAAhB;AACD;;AAED,MAAIZ,MAAM,CAACa,WAAP,KAAuB,MAAvB,IAAiC,CAACb,MAAM,CAACa,WAA7C,EAA0D;AACxDZ,IAAAA,MAAM,CAACY,WAAP,GAAqB,8BAArB;AACD;;AAED,MAAI,CAACb,MAAM,CAACO,IAAR,IAAgB,CAACP,MAAM,CAACO,IAA5B,EAAkC;AAChCN,IAAAA,MAAM,CAACM,IAAP,GAAc,yBAAd;AACD,GAtB0C,CAwB3C;;;AAEA,MAAID,QAAQ,GAAGF,GAAf,EAAoB;AAClBH,IAAAA,MAAM,CAACQ,IAAP,GAAc,iCAAd;AACAR,IAAAA,MAAM,CAACM,IAAP,GAAc,iCAAd;AACD;;AAED,MAAI,CAACP,MAAM,CAACS,IAAZ,EAAkB;AAChBR,IAAAA,MAAM,CAACQ,IAAP,GAAc,yBAAd;AACD;;AAED,MAAIT,MAAM,CAACc,kBAAP,KAA8B,MAA9B,IAAwC,CAACd,MAAM,CAACc,kBAApD,EAAwE;AACtEb,IAAAA,MAAM,CAACa,kBAAP,GAA4B,iCAA5B;AACD;;AAED,MAAId,MAAM,CAACe,oBAAP,KAAgC,MAAhC,IAA0C,CAACf,MAAM,CAACe,oBAAtD,EAA4E;AAC1Ed,IAAAA,MAAM,CAACc,oBAAP,GAA8B,mCAA9B;AACD;;AAED,SAAOd,MAAP;AACD","sourcesContent":["export default function validateInfo(values) {\n  let errors = {};\n  console.log(\"validating!\")\n  var now = new Date();\n  var userDate = new Date(values.date);\n  userDate.setHours(values.time.slice(0, 2));\n  userDate.setMinutes(values.time.slice(3, 5));\n\n  if (values.origin === values.destination) {\n    errors.origin = \"Origin cannot be the same as destination\";\n  }\n\n  if (values.origin === \"None\" || !values.origin) {\n    errors.origin = \"Please Specify an Origin\";\n  }\n\n  if (values.destination === \"None\" || !values.destination) {\n    errors.destination = \"Please Specify a Destination\";\n  }\n\n  if (!values.date || !values.date) {\n    errors.date = \"Departure date required\";\n  }\n\n  //   console.log(values.date);\n\n  if (userDate < now) {\n    errors.time = \"Date and/or time is in the Past\";\n    errors.date = \"Date and/or time is in the Past\";\n  }\n\n  if (!values.time) {\n    errors.time = \"Departure time required\";\n  }\n\n  if (values.preferred_car_type === \"None\" || !values.preferred_car_type) {\n    errors.preferred_car_type = \"Car Type cannot be left as None\";\n  }\n\n  if (values.preferred_group_size === \"None\" || !values.preferred_group_size) {\n    errors.preferred_group_size = \"Group Size cannot be left as None\";\n  }\n\n  return errors;\n}\n"]},"metadata":{},"sourceType":"module"}