{"ast":null,"code":"var _jsxFileName = \"/Users/obedababio/Documents/Spring 2021/CPSC 439/ypool/ypool/web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Welcome from \"./components/pages/Welcome/Welcome\";\nimport RegistrationForm from \"./components/pages/Register/RegistrationForm\";\nimport RequestForm from \"./components/pages/Request/RequestForm\";\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\nimport RideStatus from \"./components/pages/RideStatus/RideStatus\";\nimport \"./App.css\";\nimport testrender from \"./components/pages/testrender\";\nimport FlavorForm from \"./components/pages/test\";\nimport UserRouting from \"./components/pages/UserRouting\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n      size: 150,\n      color: \"#6457FD\",\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(UserRouting, {\n            apiKey: props.api_key,\n            netId: props.flask_token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/request\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(RequestForm, {\n            apiKey: props.api_key,\n            netId: props.flask_token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ridestatus\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(RideStatus, {\n            apiKey: props.api_key,\n            netId: props.flask_token\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"bp7W7BLZaxNmS0ceaCBH82+KoGQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/obedababio/Documents/Spring 2021/CPSC 439/ypool/ypool/web/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","Welcome","RegistrationForm","RequestForm","Dashboard","RideStatus","testrender","FlavorForm","UserRouting","ClipLoader","App","props","loading","setLoading","setTimeout","api_key","flask_token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGD,OAAO,gBACN,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE,GAAlB;AAAuB,MAAA,KAAK,EAAE,SAA9B;AAAyC,MAAA,OAAO,EAAEA;AAAlD;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,MAAM,EAAE,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,MAAM,EAAE,mBACN,QAAC,WAAD;AAAa,YAAA,MAAM,EAAED,KAAK,CAACI,OAA3B;AAAoC,YAAA,KAAK,EAAEJ,KAAK,CAACK;AAAjD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,MAAM,EAAE,mBACN,QAAC,WAAD;AAAa,YAAA,MAAM,EAAEL,KAAK,CAACI,OAA3B;AAAoC,YAAA,KAAK,EAAEJ,KAAK,CAACK;AAAjD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAVF,eAiBE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,MAAM,EAAE,mBACN,QAAC,UAAD;AAAY,YAAA,MAAM,EAAEL,KAAK,CAACI,OAA1B;AAAmC,YAAA,KAAK,EAAEJ,KAAK,CAACK;AAAhD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA7CD;;GAAMN,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Welcome from \"./components/pages/Welcome/Welcome\";\nimport RegistrationForm from \"./components/pages/Register/RegistrationForm\";\nimport RequestForm from \"./components/pages/Request/RequestForm\";\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\nimport RideStatus from \"./components/pages/RideStatus/RideStatus\";\nimport \"./App.css\";\nimport testrender from \"./components/pages/testrender\";\nimport FlavorForm from \"./components/pages/test\";\nimport UserRouting from \"./components/pages/UserRouting\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst App = (props) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <ClipLoader size={150} color={\"#6457FD\"} loading={loading} />\n      ) : (\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact render={() => <Welcome />} />\n            <Route\n              path=\"/home\"\n              exact\n              render={() => (\n                <UserRouting apiKey={props.api_key} netId={props.flask_token} />\n              )}\n            />\n\n            <Route\n              path=\"/request\"\n              exact\n              render={() => (\n                <RequestForm apiKey={props.api_key} netId={props.flask_token} />\n              )}\n            />\n            <Route\n              path=\"/ridestatus\"\n              exact\n              render={() => (\n                <RideStatus apiKey={props.api_key} netId={props.flask_token} />\n              )}\n            />\n          </Switch>\n        </Router>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}