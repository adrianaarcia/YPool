{"ast":null,"code":"var _jsxFileName = \"/Users/jaredtruong/Desktop/Spring2021/ypool/git/ypool/web/src/components/pages/RideStatus/RideStatus.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FooterContainer } from '../../../containers/footer';\nimport Navbar from '../../Navbar/Navbar';\nimport axios from 'axios';\nimport { Button } from '../../Button/Button';\nimport { useHistory } from \"react-router-dom\";\nimport './RideStatus.css'; //To Do\n//Get the request new ride button out\n//Gonna have to write different table functions for different types of data\n//api key header\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GroupInfo(props) {\n  _s();\n\n  let groupId = {\n    'groupId': props.groupId\n  };\n  let header = props.header;\n  const [info, setInfo] = useState(null);\n  useEffect(() => {\n    axios.post(\"https://yalepool.com/get-group-info\", groupId, {\n      headers: header\n    }).then(response => {\n      setInfo(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  if (!info) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    let members = info.data.names;\n    let departureDate = info.data.departureDate;\n    let departureTime = info.data.departureTime;\n    let destinations = info.data.destinations;\n    let origins = info.data.origins;\n    let orgKey = 0;\n    let destKey = 0;\n    let memKey = 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"match_td_right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Match Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Origins:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), origins.map(org => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: org[0]\n        }, orgKey++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Destinations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), destinations.map(dest => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dest[0]\n        }, destKey++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Departure Date: \", departureDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Departure Time: \", departureTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"match_td\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Group Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), members.map(mem => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mem\n        }, memKey++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(GroupInfo, \"eGVoHZlUrWhNDRFn2ZPb/gOb4HQ=\");\n\n_c = GroupInfo;\n\nfunction DecisionBox(props) {\n  _s2();\n\n  let data = {\n    'netId': props.netId,\n    'requestId': props.requestId\n  };\n  let header = props.header;\n  const [result, setResponse] = useState(null);\n\n  function accept(e) {\n    e.preventDefault();\n    axios.post(\"https://yalepool.com/confirm-match\", data, {\n      headers: header\n    }).then(response => {\n      setResponse(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function decline(e) {\n    e.preventDefault();\n    axios.post(\"https://yalepool.com/decline-match\", data, {\n      headers: header\n    }).then(response => {\n      setResponse(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  if (result) {\n    props.update();\n  }\n\n  if (props.needClick) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              buttonSize: \"btn--small\",\n              buttonColor: \"blue\",\n              onClick: accept,\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              buttonSize: \"btn--small\",\n              buttonColor: \"blue\",\n              onClick: decline,\n              children: \"Decline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s2(DecisionBox, \"xS4aX6Ldgm3ziUm9VzusyiImYTo=\");\n\n_c2 = DecisionBox;\n\nfunction MatchTable(props) {\n  let trips = props.trips;\n\n  if (trips.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"category\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), trips.map(trip => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"match_table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"match_td_right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"td_title\",\n                    children: \"Request Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [trip.origin, \" to \", trip.destination]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Departure Date: \", trip.date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Preferred Departure Time: \", trip.time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Preferred Group Size: \", trip.preferred_group_size]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Preferred Car Type: \", trip.preferred_car_type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GroupInfo, {\n                  header: props.header,\n                  groupId: trip.groupId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 33\n                }, this), props.needClick && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"match_td_left\",\n                  children: /*#__PURE__*/_jsxDEV(DecisionBox, {\n                    header: props.header,\n                    update: props.update,\n                    needClick: props.needClick,\n                    netId: trip.netId,\n                    requestId: trip.requestId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)\n          }, trip.groupId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"table_hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c3 = MatchTable;\n\nfunction WaitingTable(props) {\n  let requests = props.trips;\n\n  if (requests.length != 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"category\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), requests.map(request => /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"match_table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"request_td\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Request Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [request.origin, \" to \", request.destination]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Departure Date: \", request.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Preferred Departure Time: \", request.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Preferred Group Size: \", request.preferred_group_size]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Preferred Car Type: \", request.preferred_car_type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this)\n        }, request.groupId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c4 = WaitingTable;\n\nfunction RideStatus(props) {\n  _s3();\n\n  var netId = {\n    'netId': props.netId\n  };\n  var header = {\n    'api_key': props.apiKey\n  };\n  const [data, setData] = useState(null);\n\n  function update() {\n    //pass the netid to the api call\n    axios.post(\"https://yalepool.com/get-request-status\", netId, {\n      headers: header\n    }).then(response => {\n      setData(response); //set it!\n    }).catch(error => {\n      console.log(`Error: ${error}`);\n    });\n  }\n\n  useEffect(() => {\n    update();\n  }, []); //These arrays will hold our types of trips\n\n  let finalizedGroup = [];\n  let awaitingUserConf = [];\n  let awaitingOtherConf = [];\n  let awaitingMatch = [];\n\n  if (data) {\n    data.data.forEach(trip => {\n      if (trip.allConfirmed) {\n        finalizedGroup.push(trip);\n      } else if (trip.confirmed) {\n        awaitingOtherConf.push(trip);\n      } else if (trip.matched && !trip.confirmed) {\n        awaitingUserConf.push(trip);\n      } else if (!trip.matched) {\n        awaitingMatch.push(trip);\n      }\n    });\n  } //Give option to request a new ride\n\n\n  let history = useHistory();\n\n  function GoToRequest(e) {\n    e.preventDefault();\n    history.push('request');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MatchTable, {\n      header: header,\n      trips: finalizedGroup,\n      update: update,\n      title: \"Confirmed Matches\",\n      needClick: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MatchTable, {\n      header: header,\n      trips: awaitingUserConf,\n      update: update,\n      title: \"Finalized Matches\",\n      needClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MatchTable, {\n      header: header,\n      trips: awaitingOtherConf,\n      update: update,\n      title: \"Awaiting Others' Confirmation\",\n      needClick: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(WaitingTable, {\n      header: header,\n      trips: awaitingMatch,\n      title: \"Waiting To Be Matched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center_button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        buttonColor: \"blue\",\n        onClick: GoToRequest,\n        className: \"center_button\",\n        children: \"Click Here To Request A Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FooterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(RideStatus, \"ME/XrlReLh5YKBFmNBZgicCkgUI=\", false, function () {\n  return [useHistory];\n});\n\n_c5 = RideStatus;\nexport default RideStatus;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GroupInfo\");\n$RefreshReg$(_c2, \"DecisionBox\");\n$RefreshReg$(_c3, \"MatchTable\");\n$RefreshReg$(_c4, \"WaitingTable\");\n$RefreshReg$(_c5, \"RideStatus\");","map":{"version":3,"sources":["/Users/jaredtruong/Desktop/Spring2021/ypool/git/ypool/web/src/components/pages/RideStatus/RideStatus.js"],"names":["React","useEffect","useState","FooterContainer","Navbar","axios","Button","useHistory","GroupInfo","props","groupId","header","info","setInfo","post","headers","then","response","catch","error","console","log","members","data","names","departureDate","departureTime","destinations","origins","orgKey","destKey","memKey","map","org","dest","mem","DecisionBox","netId","requestId","result","setResponse","accept","e","preventDefault","decline","update","needClick","MatchTable","trips","length","title","trip","paddingBottom","origin","destination","date","time","preferred_group_size","preferred_car_type","WaitingTable","requests","request","RideStatus","apiKey","setData","finalizedGroup","awaitingUserConf","awaitingOtherConf","awaitingMatch","forEach","allConfirmed","push","confirmed","matched","history","GoToRequest"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FooterContainer } from '../../../containers/footer';\nimport Navbar from '../../Navbar/Navbar';\nimport axios from 'axios';\nimport {Button} from '../../Button/Button';\nimport { useHistory } from \"react-router-dom\";\nimport './RideStatus.css';\n\n//To Do\n    //Get the request new ride button out\n    //Gonna have to write different table functions for different types of data\n\n//api key header\n\nfunction GroupInfo(props) {\n    let groupId = {'groupId' : props.groupId}\n    let header = props.header\n    const [info, setInfo] = useState(null)\n\n    useEffect(() =>{\n        axios.post(\"https://yalepool.com/get-group-info\", groupId, {headers: header})\n            .then(response =>{\n                setInfo(response)\n            })\n            .catch(error =>{\n                console.log(error)\n            })\n    }, [])\n    if(!info){\n        return(\n            <>\n            </>\n        )\n    }\n    else{\n        let members = info.data.names\n        let departureDate = info.data.departureDate\n        let departureTime = info.data.departureTime\n        let destinations = info.data.destinations\n        let origins = info.data.origins\n        let orgKey = 0\n        let destKey = 0\n        let memKey = 0\n        return(\n            <>\n                <td className=\"match_td_right\">\n                    <h3>Match Info</h3>\n                    <p>Origins:</p>\n                    {origins.map(org => \n                        <p key={orgKey++}>{org[0]}</p>\n                    )}\n                    <p>Destinations:</p>\n                    {destinations.map(dest => \n                        <p key={destKey++}>{dest[0]}</p>\n                    )}\n                    <p>Departure Date: {departureDate}</p>\n                    <p>Departure Time: {departureTime}</p>\n                </td>\n                <td className=\"match_td\">\n                    <h3>Group Members</h3>\n                    {members.map(mem => \n                        <p key={memKey++}>{mem}</p>\n                    )}\n                </td>\n            </>\n        )\n    }\n\n}\n\nfunction DecisionBox(props) {\n\n    let data = {'netId':props.netId, 'requestId':props.requestId}\n    let header = props.header\n    const [result, setResponse] = useState(null)\n\n    function accept(e) {\n        e.preventDefault()\n        axios.post(\"https://yalepool.com/confirm-match\", data, {headers: header})\n            .then(response => {\n                setResponse(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    function decline(e) {\n        e.preventDefault()\n        axios.post(\"https://yalepool.com/decline-match\", data, {headers: header})\n        .then(response => {\n            setResponse(response)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    if(result){\n        props.update()\n    }\n    if(props.needClick){\n        return(\n            <table>\n                <tbody>\n                    <tr>\n                        <td>\n                            <Button \n                                buttonSize=\"btn--small\"\n                                buttonColor=\"blue\"\n                                onClick={accept}\n                            >\n                                Accept\n                            </Button>\n                        </td>\n                        <td>\n                            <Button \n                                buttonSize=\"btn--small\"\n                                buttonColor=\"blue\"\n                                onClick={decline}\n                            >\n                                Decline\n                            </Button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n    else{\n        return(\n            <div></div>\n        )\n    }\n}\n\nfunction MatchTable(props) {\n\n\n    let trips = props.trips\n    if(trips.length !== 0){\n        return(\n            <div>\n                <div className='table_div'>\n                <h1 className='category'>{props.title}</h1>\n                    {trips.map(trip =>\n                    <div style={{paddingBottom: \"10px\"}}>\n                    <table key={trip.groupId} className=\"match_table\">\n                        <tbody>\n                            <tr>\n                                <td className=\"match_td_right\">\n                                <h3 className=\"td_title\">Request Info</h3> \n                                <p>{trip.origin} to {trip.destination}</p>\n                                <p>Departure Date: {trip.date}</p>\n                                <p>Preferred Departure Time: {trip.time}</p>\n                                <p>Preferred Group Size: {trip.preferred_group_size}</p>\n                                <p>Preferred Car Type: {trip.preferred_car_type}</p>\n                                </td>\n                                <GroupInfo header={props.header} groupId ={trip.groupId}/>\n                                {props.needClick &&                                 \n                                    <td className=\"match_td_left\">\n                                        <DecisionBox header={props.header} update={props.update} needClick={props.needClick} netId={trip.netId} requestId={trip.requestId}/>\n                                    </td>\n                                }\n                            </tr>\n                        </tbody>\n                    </table>\n                    </div>)}\n                </div>\n                <hr className=\"table_hr\"/>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\nfunction WaitingTable(props) {\n    \n    let requests = props.trips\n    if(requests.length != 0){\n        return(\n        <div>\n            <div className='table_div'>\n            <h1 className='category'>{props.title}</h1>\n            {requests.map(request =>\n                <table key={request.groupId} className=\"match_table\">\n                    <tbody>\n                        <tr>\n                            <td className=\"request_td\">\n                                <h3>Request Info</h3> \n                                <p>{request.origin} to {request.destination}</p>\n                                <p>Departure Date: {request.date}</p>\n                                <p>Preferred Departure Time: {request.time}</p>\n                                <p>Preferred Group Size: {request.preferred_group_size}</p>\n                                <p>Preferred Car Type: {request.preferred_car_type}</p>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>)}\n            </div>\n        </div>\n        )\n    }\n    else{\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\nfunction RideStatus(props) {\n\n    var netId = {'netId' : props.netId}\n    var header = {'api_key': props.apiKey}\n\n    const [data, setData] = useState(null)\n\n    function update() {\n        //pass the netid to the api call\n        axios.post(\"https://yalepool.com/get-request-status\", netId, {headers: header})\n            .then(response => {\n                setData(response) //set it!\n            })\n            .catch(error => {\n                console.log(`Error: ${error}`)\n            })\n    }\n\n    useEffect(() => {\n        update()\n    }, [])\n    //These arrays will hold our types of trips\n    let finalizedGroup = []\n    let awaitingUserConf = []\n    let awaitingOtherConf = []\n    let awaitingMatch = []\n    if(data){\n        data.data.forEach(trip =>{\n            if(trip.allConfirmed){\n                finalizedGroup.push(trip)\n            }\n            else if(trip.confirmed){\n                awaitingOtherConf.push(trip)\n            }\n            else if(trip.matched && !trip.confirmed){\n                awaitingUserConf.push(trip)\n            }\n            else if(!trip.matched){\n                awaitingMatch.push(trip)\n            }\n        })\n    }\n\n    //Give option to request a new ride\n    let history = useHistory()\n    function GoToRequest(e){\n        e.preventDefault()\n        history.push('request')\n    }\n\n    return(\n        <div>\n            <Navbar />\n                <MatchTable header={header} trips={finalizedGroup} update={update} title=\"Confirmed Matches\" needClick={false}/>\n                <MatchTable header={header} trips={awaitingUserConf} update={update} title=\"Finalized Matches\" needClick={true}/>\n                <MatchTable header={header} trips={awaitingOtherConf} update={update} title=\"Awaiting Others' Confirmation\" needClick={false}/>\n                <WaitingTable header={header} trips={awaitingMatch} title=\"Waiting To Be Matched\"/>\n                <div className=\"center_button\">\n                <Button buttonColor=\"blue\" onClick={GoToRequest} className=\"center_button\">Click Here To Request A Ride</Button>\n                </div>\n            <FooterContainer/>\n        </div>\n    )\n}\n\nexport default RideStatus"]},"metadata":{},"sourceType":"module"}