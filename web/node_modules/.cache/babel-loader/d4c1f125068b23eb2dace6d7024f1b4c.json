{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({\n    fullname: '',\n    email: '',\n    destination: '',\n    date: '',\n    time: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"nArQWtuNA2cYN4AK5+/Z1bGdTiA=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/jaredtruong/Desktop/Spring 2021/ypool/git/ypool_frontend/src/components/pages/Request/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","values","setValues","fullname","email","destination","date","time","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","handleSubmit","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,WAAW,EAAE,EAHoB;AAIjCC,IAAAA,IAAI,EAAE,EAJ2B;AAKjCC,IAAAA,IAAI,EAAE;AAL2B,GAAD,CAApC;AAOA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMgB,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAd,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACa,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAT,IAAAA,SAAS,CAACT,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAU,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GALD;;AAOAd,EAAAA,SAAS,CACL,MAAM;AACF,QAAIsB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAsD;AAClDX,MAAAA,QAAQ;AACX;AACJ,GALI,EAML,CAACS,MAAD,CANK,CAAT;AASA,SAAO;AAAEI,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8BhB,IAAAA,MAA9B;AAAsCO,IAAAA;AAAtC,GAAP;AACH,CApCD;;GAAMV,O;;AAsCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n    const [values, setValues] = useState({\n        fullname: '',\n        email: '',\n        destination: '',\n        date: '',\n        time: ''\n    });\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        setErrors(validate(values));\n        setIsSubmitting(true);\n    };\n\n    useEffect(\n        () => {\n            if (Object.keys(errors).length === 0 && isSubmitting) {\n                callback();\n            }\n        },\n        [errors]\n    );\n\n    return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}