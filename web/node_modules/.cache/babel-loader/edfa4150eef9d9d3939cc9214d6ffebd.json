{"ast":null,"code":"export default function validateInfo(values) {\n  let errors = {};\n  var now = new Date();\n  var userDate = new Date(values.date);\n  userDate.setHours(values.time.slice(0, 2));\n  userDate.setMinutes(values.time.slice(3, 5));\n\n  if (values.origin === values.destination) {\n    errors.origin = \"Origin cannot be the same as destination\";\n  }\n\n  if (values.origin === \"None\" || !values.origin) {\n    errors.origin = \"Please Specify an Origin\";\n  }\n\n  if (values.destination === \"None\" || !values.destination) {\n    errors.destination = \"Please Specify a Destination\";\n  }\n\n  if (!values.date || !values.date) {\n    errors.date = \"Departure date required\";\n  } //   console.log(values.date);\n\n\n  if (userDate < now) {\n    errors.time = \"Date and/or time is in the Past\";\n    errors.date = \"Date and/or time is in the Past\";\n  }\n\n  if (!values.time) {\n    errors.time = \"Departure time required\";\n  }\n\n  if (values.preferred_car_type === \"None\" || !values.preferred_car_type) {\n    errors.preferred_car_type = \"Car Type cannot be left as None\";\n  }\n\n  if (values.preferred_group_size === \"None\" || !values.preferred_group_size) {\n    errors.preferred_group_size = \"Group Size cannot be left as None\";\n  }\n\n  console.log(\"Here are the errors\");\n  console.log(errors);\n  return errors;\n}","map":{"version":3,"sources":["/Users/shawtylow/Documents/Spring Semester 2021/SWE/ypool/web/src/components/pages/Request/validateInfo.js"],"names":["validateInfo","values","errors","now","Date","userDate","date","setHours","time","slice","setMinutes","origin","destination","preferred_car_type","preferred_group_size","console","log"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC3C,MAAIC,MAAM,GAAG,EAAb;AAEA,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,QAAQ,GAAG,IAAID,IAAJ,CAASH,MAAM,CAACK,IAAhB,CAAf;AACAD,EAAAA,QAAQ,CAACE,QAAT,CAAkBN,MAAM,CAACO,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAlB;AACAJ,EAAAA,QAAQ,CAACK,UAAT,CAAoBT,MAAM,CAACO,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAApB;;AAEA,MAAIR,MAAM,CAACU,MAAP,KAAkBV,MAAM,CAACW,WAA7B,EAA0C;AACxCV,IAAAA,MAAM,CAACS,MAAP,GAAgB,0CAAhB;AACD;;AAED,MAAIV,MAAM,CAACU,MAAP,KAAkB,MAAlB,IAA4B,CAACV,MAAM,CAACU,MAAxC,EAAgD;AAC9CT,IAAAA,MAAM,CAACS,MAAP,GAAgB,0BAAhB;AACD;;AAED,MAAIV,MAAM,CAACW,WAAP,KAAuB,MAAvB,IAAiC,CAACX,MAAM,CAACW,WAA7C,EAA0D;AACxDV,IAAAA,MAAM,CAACU,WAAP,GAAqB,8BAArB;AACD;;AAED,MAAI,CAACX,MAAM,CAACK,IAAR,IAAgB,CAACL,MAAM,CAACK,IAA5B,EAAkC;AAChCJ,IAAAA,MAAM,CAACI,IAAP,GAAc,yBAAd;AACD,GAtB0C,CAwB3C;;;AAEA,MAAID,QAAQ,GAAGF,GAAf,EAAoB;AAClBD,IAAAA,MAAM,CAACM,IAAP,GAAc,iCAAd;AACAN,IAAAA,MAAM,CAACI,IAAP,GAAc,iCAAd;AACD;;AAED,MAAI,CAACL,MAAM,CAACO,IAAZ,EAAkB;AAChBN,IAAAA,MAAM,CAACM,IAAP,GAAc,yBAAd;AACD;;AAED,MAAIP,MAAM,CAACY,kBAAP,KAA8B,MAA9B,IAAwC,CAACZ,MAAM,CAACY,kBAApD,EAAwE;AACtEX,IAAAA,MAAM,CAACW,kBAAP,GAA4B,iCAA5B;AACD;;AAED,MAAIZ,MAAM,CAACa,oBAAP,KAAgC,MAAhC,IAA0C,CAACb,MAAM,CAACa,oBAAtD,EAA4E;AAC1EZ,IAAAA,MAAM,CAACY,oBAAP,GAA8B,mCAA9B;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACA,SAAOA,MAAP;AACD","sourcesContent":["export default function validateInfo(values) {\n  let errors = {};\n\n  var now = new Date();\n  var userDate = new Date(values.date);\n  userDate.setHours(values.time.slice(0, 2));\n  userDate.setMinutes(values.time.slice(3, 5));\n\n  if (values.origin === values.destination) {\n    errors.origin = \"Origin cannot be the same as destination\";\n  }\n\n  if (values.origin === \"None\" || !values.origin) {\n    errors.origin = \"Please Specify an Origin\";\n  }\n\n  if (values.destination === \"None\" || !values.destination) {\n    errors.destination = \"Please Specify a Destination\";\n  }\n\n  if (!values.date || !values.date) {\n    errors.date = \"Departure date required\";\n  }\n\n  //   console.log(values.date);\n\n  if (userDate < now) {\n    errors.time = \"Date and/or time is in the Past\";\n    errors.date = \"Date and/or time is in the Past\";\n  }\n\n  if (!values.time) {\n    errors.time = \"Departure time required\";\n  }\n\n  if (values.preferred_car_type === \"None\" || !values.preferred_car_type) {\n    errors.preferred_car_type = \"Car Type cannot be left as None\";\n  }\n\n  if (values.preferred_group_size === \"None\" || !values.preferred_group_size) {\n    errors.preferred_group_size = \"Group Size cannot be left as None\";\n  }\n  console.log(\"Here are the errors\")\n  console.log(errors)\n  return errors;\n}\n"]},"metadata":{},"sourceType":"module"}