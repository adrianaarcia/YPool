{"ast":null,"code":"import _slicedToArray from\"/Users/jaredtruong/Desktop/Spring 2021/ypool/git/ypool_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{FooterContainer}from'../../../containers/footer';import Navbar from'../../Navbar/Navbar';import axios from'axios';import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function createMatchTable(matches){if(matches.length!=0){return/*#__PURE__*/_jsx(\"div\",{children:matches.map(function(trip){return/*#__PURE__*/_jsx(\"table\",{style:{border:\"1px solid blue\"},children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{style:{textAlign:\"center\",paddingRight:\"50px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:trip.origin}),/*#__PURE__*/_jsx(\"p\",{children:\"-to-\"}),/*#__PURE__*/_jsx(\"h2\",{children:trip.destination})]}),/*#__PURE__*/_jsxs(\"td\",{style:{borderRight:\"1px solid blue\",width:\"700px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:trip.date}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Preferred Car Type: \",trip.preferred_car_type]})]}),/*#__PURE__*/_jsxs(\"td\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Group Size\"}),/*#__PURE__*/_jsx(\"h2\",{children:trip.preferred_group_size})]}),/*#__PURE__*/_jsx(\"td\",{})]},trip.groupId)})});})});}else{return/*#__PURE__*/_jsx(\"h2\",{children:\"No trips pending match!\"});}}function notMatchedTrips(notMatched){if(notMatched.length!=0){return/*#__PURE__*/_jsx(\"div\",{children:notMatched.map(function(trip){return/*#__PURE__*/_jsx(\"table\",{style:{border:\"1px solid blue\"},children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{style:{textAlign:\"center\",padding:\"16px\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:trip.origin}),/*#__PURE__*/_jsx(\"p\",{children:\"-to-\"}),/*#__PURE__*/_jsx(\"h2\",{children:trip.destination})]}),/*#__PURE__*/_jsxs(\"td\",{style:{borderRight:\"1px solid blue\",width:\"700px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:trip.date}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Preferred Car Type: \",trip.preferred_car_type]})]}),/*#__PURE__*/_jsxs(\"td\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Group Size\"}),/*#__PURE__*/_jsx(\"h2\",{children:trip.preferred_group_size})]}),/*#__PURE__*/_jsx(\"td\",{})]},trip.groupId)})});})});}else{return/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"center\"},children:\"No Trips Awaiting Match\"});}}var RideStatus=function RideStatus(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var mounted=true;axios.get(\"https://is376m6q9a.execute-api.us-east-1.amazonaws.com/dev/get-request-status\").then(function(response){if(mounted){setData(response.data);}}).catch(function(error){setData(error);});return function(){return mounted=false;};},[]);console.log(data);var matched=[];var notMatched=[];data.forEach(function(trip){if(trip.matched){matched.push(trip);}else{notMatched.push(trip);}});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{style:{alignItems:\"center\",paddingLeft:\"200px\",paddingRight:\"200px\",paddingTop:\"40px\",paddingBottom:\"64px\"},children:[/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:\"left\",paddingBottom:\"10px\"},children:\"Pending Approval\"}),createMatchTable(matched),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:\"left\"},children:\"Awaiting Match\"}),notMatchedTrips(notMatched),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:\"left\"},children:\"Past Trips\"}),/*#__PURE__*/_jsx(\"hr\",{})]}),/*#__PURE__*/_jsx(FooterContainer,{})]});};export default RideStatus;","map":{"version":3,"sources":["/Users/jaredtruong/Desktop/Spring 2021/ypool/git/ypool_frontend/src/components/pages/RideStatus/RideStatus.js"],"names":["React","useEffect","useState","FooterContainer","Navbar","axios","useHistory","createMatchTable","matches","length","map","trip","border","textAlign","paddingRight","origin","destination","borderRight","width","date","preferred_car_type","preferred_group_size","groupId","notMatchedTrips","notMatched","padding","RideStatus","data","setData","mounted","get","then","response","catch","error","console","log","matched","forEach","push","alignItems","paddingLeft","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FooterContainer } from '../../../containers/footer';\nimport Navbar from '../../Navbar/Navbar';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nfunction createMatchTable(matches){\n    if(matches.length != 0){\n        return(\n            <div>\n            {matches.map(trip =>\n                <table style={{border: \"1px solid blue\"}}>\n                    <tbody>\n                        <tr key={trip.groupId}>\n                                <td style={{textAlign:\"center\", paddingRight:\"50px\"}}>\n                                    <h2>{trip.origin}</h2>\n                                    <p>-to-</p>\n                                    <h2>{trip.destination}</h2>\n                                </td>\n                                <td style={{borderRight: \"1px solid blue\", width: \"700px\"}}>\n                                    <h3>{trip.date}</h3>\n                                    <h4>Preferred Car Type: {trip.preferred_car_type}</h4>\n                                </td>\n                                <td style={{textAlign:\"center\"}}>\n                                    <h1>Group Size</h1>\n                                    <h2>{trip.preferred_group_size}</h2>\n                                </td>\n                                <td>\n\n                                </td>\n                        </tr>\n                    </tbody>\n                </table>\n            )}\n            </div>\n        )\n    }\n    else{\n        return(\n            <h2>No trips pending match!</h2>\n        )\n    }\n}\n\nfunction notMatchedTrips(notMatched) {\n    if(notMatched.length != 0){\n        return (\n            <div>\n            {notMatched.map(trip =>\n                <table style={{border: \"1px solid blue\"}}>\n                    <tbody>\n                        <tr key={trip.groupId}>\n                                <td style={{textAlign:\"center\", padding:\"16px\"}}>\n                                    <h2>{trip.origin}</h2>\n                                    <p>-to-</p>\n                                    <h2>{trip.destination}</h2>\n                                </td>\n                                <td style={{borderRight: \"1px solid blue\", width: \"700px\"}}>\n                                    <h3>{trip.date}</h3>\n                                    <h4>Preferred Car Type: {trip.preferred_car_type}</h4>\n                                </td>\n                                <td style={{textAlign:\"center\"}}>\n                                    <h1>Group Size</h1>\n                                    <h2>{trip.preferred_group_size}</h2>\n                                </td>\n                                <td>\n\n                                </td>\n                        </tr>\n                    </tbody>\n                </table>\n            )}\n            </div>\n        )\n    }\n    else{\n        return(\n            <h3 style={{textAlign:\"center\"}}>No Trips Awaiting Match</h3>\n        )\n    }\n}\n\nconst RideStatus = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() =>{\n        let mounted = true;\n        axios.get(\"https://is376m6q9a.execute-api.us-east-1.amazonaws.com/dev/get-request-status\")\n            .then(response => {\n                if(mounted){\n                    setData(response.data)\n                }\n            })\n            .catch(error => {\n                setData(error)\n            })\n            return () => mounted = false;\n    }, [])\n    console.log(data)\n    var matched = []\n    var notMatched = []\n    data.forEach(trip => {\n        if(trip.matched){\n            matched.push(trip)\n        }\n        else{\n            notMatched.push(trip)\n        }\n    })\n    return(\n        <div>\n        \n            <Navbar />\n                <div style={{alignItems:\"center\", paddingLeft: \"200px\", paddingRight: \"200px\", paddingTop: \"40px\", paddingBottom: \"64px\"}}>\n                    <h1 style={{textAlign:\"left\", paddingBottom:\"10px\"}}>Pending Approval</h1>\n                    {createMatchTable(matched)}\n                    <hr/>\n                    <h1 style={{textAlign:\"left\"}}>Awaiting Match</h1>\n                    {notMatchedTrips(notMatched)}\n                    <hr/>\n                    <h1 style={{textAlign:\"left\"}}>Past Trips</h1>\n                    <hr/>\n                </div>\n            <FooterContainer />\n        </div>\n    )\n}\nexport default RideStatus"]},"metadata":{},"sourceType":"module"}