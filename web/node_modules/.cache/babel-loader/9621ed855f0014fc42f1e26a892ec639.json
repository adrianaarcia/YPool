{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst useForm = (callback, validate, netId, apiKey) => {\n  _s();\n\n  const [values, setValues] = useState({\n    netId: \"ds2496\",\n    date: \"\",\n    time: \"\",\n    origin: \"\",\n    destination: \"\",\n    preferred_car_type: \"\",\n    preferred_group_size: \"\",\n    xw\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    console.log(\"Submitting\");\n    console.log(values);\n    const headers = {\n      \"api-key\": apiKey\n    };\n    axios.post(\"https://yalepool.com/ride-request\", values, {\n      headers: headers\n    }).then(response => {\n      console.log(response);\n      history.push(\"/home\");\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"w5Z033iygtNn8vABWv3hd+CYkfo=\", false, function () {\n  return [useHistory];\n});\n\nexport default useForm;","map":{"version":3,"sources":["/Users/shawtylow/Documents/Spring Semester 2021/SWE/ypool/web/src/components/pages/Request/useForm.js"],"names":["useState","useEffect","useHistory","axios","useForm","callback","validate","netId","apiKey","values","setValues","date","time","origin","destination","preferred_car_type","preferred_group_size","xw","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","history","handleSubmit","preventDefault","console","log","headers","post","then","response","push","catch","error","Object","keys","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,KAArB,EAA4BC,MAA5B,KAAuC;AAAA;;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC;AACnCO,IAAAA,KAAK,EAAE,QAD4B;AAEnCI,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,IAAI,EAAE,EAH6B;AAInCC,IAAAA,MAAM,EAAE,EAJ2B;AAKnCC,IAAAA,WAAW,EAAE,EALsB;AAMnCC,IAAAA,kBAAkB,EAAE,EANe;AAOnCC,IAAAA,oBAAoB,EAAE,EAPa;AAOVC,IAAAA;AAPU,GAAD,CAApC;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMsB,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAhB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACe,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND;;AAQA,QAAME,OAAO,GAAGzB,UAAU,EAA1B;;AAEA,QAAM0B,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,SAAS,CAACb,QAAQ,CAACG,MAAD,CAAT,CAAT;AACAY,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYtB,MAAZ;AACA,UAAMuB,OAAO,GAAG;AACd,iBAAWxB;AADG,KAAhB;AAGAL,IAAAA,KAAK,CACF8B,IADH,CACQ,mCADR,EAC6CxB,MAD7C,EACqD;AACjDuB,MAAAA,OAAO,EAAEA;AADwC,KADrD,EAIGE,IAJH,CAISC,QAAD,IAAc;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa,OAAb;AACD,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAVH;AAWD,GArBD;;AAuBArC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsC,MAAM,CAACC,IAAP,CAAYtB,MAAZ,EAAoBuB,MAApB,KAA+B,CAA/B,IAAoCrB,YAAxC,EAAsD;AACpDf,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACa,MAAD,CAJM,CAAT;AAMA,SAAO;AAAEI,IAAAA,YAAF;AAAgBM,IAAAA,YAAhB;AAA8BnB,IAAAA,MAA9B;AAAsCS,IAAAA;AAAtC,GAAP;AACD,CAtDD;;GAAMd,O;UAsBYF,U;;;AAkClB,eAAeE,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst useForm = (callback, validate, netId, apiKey) => {\n  const [values, setValues] = useState({\n    netId: \"ds2496\",\n    date: \"\",\n    time: \"\",\n    origin: \"\",\n    destination: \"\",\n    preferred_car_type: \"\",\n    preferred_group_size: \"\",xw\n  });\n\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n\n    console.log(\"Submitting\")\n    console.log(values)\n    const headers = {\n      \"api-key\": apiKey,\n    };\n    axios\n      .post(\"https://yalepool.com/ride-request\", values, {\n        headers: headers,\n      })\n      .then((response) => {\n        console.log(response);\n        history.push(\"/home\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, handleSubmit, values, errors };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}